#!/usr/bin/env bash
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: Copyright 2024 Guilherme M. Miranda <alchemist.software@proton.me>

# path
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:="${HOME}/.config"}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:="${HOME}/.cache"}"
export XDG_DATA_HOME="${XDG_DATA_HOME:="${HOME}/.local/share"}"
export XDG_STATE_HOME="${XDG_STATE_HOME:="${HOME}/.local/state"}"
export XDG_CONFIG_DIRS="/etc/xdg"
export XDG_DATA_DIRS="/home/alchemist/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share"

export PATH="/usr/games:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
export PATH="${HOME}/.local/games:${HOME}/.local/bin:${HOME}/bin:${PATH}"

export XDG_PICTURES_HOME="${XDG_PICTURES_HOME:-"${HOME}/Pictures"}"

# bash
export HISTFILE="${XDG_STATE_HOME}/bash/history"
export HISTCONTROL="ignoreboth"
export HISTSIZE="10000"
export HISTFILESIZE="10000"

shopt -s histappend
shopt -s checkwinsize

if [[ -f "/usr/share/bash-completion/bash_completion" ]]; then
	source "/usr/share/bash-completion/bash_completion"
elif [[ -f "/etc/bash_completion" ]]; then
	source "/etc/bash_completion"
fi

# colored output
if command -v dircolors > /dev/null; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"

	alias ls='ls --color=auto'
	alias dir='dir --color=auto'
	alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'

	alias diff='diff --color=auto'
fi

# terminal navigation
alias lsl="ls -blahs --time-style=long-iso --color=auto"

alias ..="cd .."
alias .2="cd ../.."
alias .3="cd ../../.."
alias .4="cd ../../../.."

# terminfo
export TERMINFO="${XDG_DATA_HOME}/terminfo"
export TERMINFO_DIRS="${XDG_DATA_HOME}/terminfo:/usr/share/terminfo"

# git
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_STATESEPARATOR=" "
export GIT_PS1_COMPRESSSPARSESTATE=true
export GIT_PS1_SHOWCONFLICTSTATE="yes"
export GIT_PS1_DESCRIBE_STYLE="default"
export GIT_PS1_SHOWCOLORHINTS=true

export GIT_COMPLETION_CHECKOUT_NO_GUESS=1
export GIT_COMPLETION_SHOW_ALL_COMMANDS=1
export GIT_COMPLETION_SHOW_ALL=1
export GIT_COMPLETION_IGNORE_CASE=1

export GIT_PATH="${XDG_DATA_HOME}/git"
export GIT_CEILING_DIRECTORIES="${GIT_PATH}:${HOME}"

function git-ignore()
{
	curl -fsSL https://www.toptal.com/developers/gitignore/api/$@ > .gitignore
}

function git-license()
{
	curl -fsSL https://api.github.com/licenses/$1 | jq -r '.body' > LICENSE
}

function symlinkage()
{
	imagicks="${GIT_PATH}/alchemist-imagicks"
	ln -sfn "${imagicks}/profile"   "${XDG_PICTURES_HOME}/Profile"
	ln -sfn "${imagicks}/picture"   "${XDG_PICTURES_HOME}/Misc"
	ln -sfn "${imagicks}/wallpaper" "${XDG_PICTURES_HOME}/Wallpaper"
	ln -sfn "${imagicks}/memery"    "${XDG_PICTURES_HOME}/Memes"
	ln -sfn "${imagicks}/luma"      "${XDG_PICTURES_HOME}/Luma"
}

# tmux
export TMUX_DIR="${XDG_CONFIG_HOME}/tmux"
export TMUX_CONF="${TMUX_DIR}/tmux.conf"
export TPM_DIR="${TMUX_DIR}/plugins/tpm"

function tmux-setup() {
	if [[ -d "${TPM_DIR}" ]]; then rm -rdf "${TPM_DIR}"; return 1; fi
	if ! command -v git &> /dev/null; then echo "error: git not found" ; return 1; fi
	if ! command -v tmux &> /dev/null; then echo "error: tmux not found" ; return 1; fi

	git clone git@github.com:tmux-plugins/tpm.git "${TPM_DIR}" --quiet
	tmux source-file "${TMUX_CONF}"

	echo "Tmux setup successful."
}

# docker
export DOCKER_CONFIG="${XDG_CONFIG_HOME}/docker"
export MACHINE_STORAGE_PATH="${XDG_DATA_HOME}/docker-machine"

# wayland
export QT_QPA_PLATFORM="wayland"

# steam
export STEAMROOT="${XDG_DATA_HOME}/Steam"

# discord
function discord-setup() {
	tmp_dir=`mktemp -d`
	curl "https://discord.com/api/download?platform=linux&format=deb" \
		--location \
		--silent \
		--show-error \
		--output "${tmp_dir}/discord.deb"
	sudo dpkg -i "${tmp_dir}/discord.deb" 2>/dev/null
	rm -rdf "${tmp_dir}"
	sh -c "$(curl -sS https://raw.githubusercontent.com/Vendicated/VencordInstaller/main/install.sh)"
}


PROMPT_COMMAND='__git_ps1 "\[\e[1;34m\]\W\[\e[1;0m\]" " "'

